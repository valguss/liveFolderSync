#!/bin/sh
# Simple script to facilitate a Master/Slave distributed file system for applications such as web servers.
# 1. Set up SSH key authentication to the slave server from the master server
# 2. Invoke this script like:
# nohup ./liveFolderSync.sh &

#exit immediatly if simple command exists with non-zero status
set -e
#error out if variables are unset
set -u

#Base directory, eg /var/www/uploads
BASEDIR="/root/testdir"

#Slave server IP address 
TARGETSERVER="/root/testdirToGoTo"

#rsync command and parameters
RSYNC="rsync -avz"

#set logfile
LOGFILE="/var/log/liveFolderSync.log"

#Logger Function
log() { 
    echo "$@" >> ${LOGFILE}
}

#Make sure any running sync completes before exiting
finishSyncAndExit() {
    log "Completing currently running syncs"; 
}

#trap keyboard abort and run
trap finishSyncAndExit SIGINT

# Initial sync
log "Performing initial sync"
$RSYNC ${BASEDIR}/* ${TARGETSERVER}/
log "Initial sync complete"

# Wait for individual file events and keep in sync
inotifywait --format '%e %w' -e close_write -e move -e create -e delete -qmr $BASEDIR | while read EVENT DIR
do
	# Fork off rsync proc to do sync
	$RSYNC ${DIR}/* ${TARGETSERVER}/ &
	log "${EVENT} on ${DIR} triggered sync with PID $!"
done
