#! /bin/sh
### BEGIN INIT INFO
# Provides:          liveFolderSync
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Realtime Folder Syncronisation across servers
# Description:       Uses rsync and ssh to keep in sync a master and
#                    slave server, for example a web server.
### END INIT INFO

# Author: Simon Green <simon@wirehive.net>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Realtime Folder Syncronisation across servers"
NAME=liveFolderSync
DAEMON=/usr/sbin/$NAME
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

#!/bin/bash
#
# chkconfig: 35 90 12
# description: Foo server
#
# Get function from functions library
. /lib/lsb/init-functions
# Start the service FOO

#make sure files are there
test -x $DAEMON || exit 5

start() {
        initlog -c "echo -n Starting $NAME server: "
        nohup $DAEMON &
        ### Create the lock file ###
        touch $PIDFILE
        success $"$NAME server startup"
        echo
}
# Restart the service FOO
stop() {
        initlog -c "echo -n Stopping $NAME server: "
        killproc $NAME
        ### Now, delete the lock file ###
        rm -f $PIDFILE
        echo
}
### main logic ###
case "$1" in
  start)
	#check if PID file exists before starting process
	if [ -e $PIDFILE ]; then
		status_of_proc -p $PIDFILE $DAEMON "$NAME proccess" && status="0" || status="$?"
		#if the status is SUCCESS then don't need to start again
		if [ $status = "0" ]; then
			exit #exit
		fi
	fi
	log_daemon_msg "Starting the process" "$NAME"
	#start the daemon wit hthe help of start-stop-daemon
	#log the message appropriately
        start
        ;;
  stop)
        stop
        ;;
  status)
        status $NAME
        ;;
  restart|reload|condrestart)
        stop
        start
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|reload|status}"
        exit 1
esac
exit 0
